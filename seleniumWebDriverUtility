package com.fdmgroup.selenium.amazonhomeandkitchen.utilities;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

public class DriverUtilities {

	private static DriverUtilities driverUtilities;
	private WebDriver webDriver;
	
	private DriverUtilities() {
		super();
		// TODO Auto-generated constructor stub
	}
	
	public static  DriverUtilities getInstance(){
		
		if (driverUtilities == null) {
			driverUtilities = new DriverUtilities();
		}
		return driverUtilities;
	}
	
	public WebDriver getDriver() {
		if(webDriver == null) {
			createDriver();
		}
		return webDriver;
	}
	
	public String getDriverName() {
		String driverName = "";
		Properties config = new Properties();
		try {
			config.load(new FileInputStream("src/test/resources/config.properties"));
		}
		catch(IOException e) {
			e.printStackTrace();
		}
		
		for (String key : config.stringPropertyNames()) {
			if(key.equals("browser")) {
				driverName = config.getProperty(key) ;
			}
		}
		
		return driverName;
	}
	
	public void createDriver() {
	
		String driverName = getDriverName();
		switch(driverName) {
		
		case  "google chrome":
			System.setProperty("webdriver.chrome.driver","src/test/resources/chromedriver.exe");
			System.out.println("new ChromeDriver() return value : "+new ChromeDriver());
			this.webDriver = new ChromeDriver(); 
			System.out.println("Driver name : "+driverName);
			System.out.println("web Driver value : "+this.webDriver);

			break;
		
		case  "firefox":
			System.setProperty("webdriver.gecko.driver","src/test/resources/geckodriver.exe");
			this.webDriver = new FirefoxDriver(); 

			break;
		
		default:
			System.out.println("incorrect driver");
			break; 
		}
	}

	
	
}
